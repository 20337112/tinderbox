# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file                       controllers.Assets.at(path="/public", file)

# App Pages
GET     /                                   controllers.Application.index
GET     /t/:xauthtoken/dashboard            controllers.Application.dashboard(xauthtoken: String)
GET     /t/:xauthtoken/inbox                controllers.Messaging.inbox(xauthtoken: String)

# Auth
POST    /authenticate                       controllers.Application.authenticate
GET     /logout/:xauthtoken                 controllers.Application.logout(xauthtoken: String)
GET     /sessions                           controllers.Application.activeSessions

# Data
GET     /t/:xauthtoken/messages                   controllers.Messaging.messages(xauthtoken: String)
POST    /t/:xauthtoken/messages/send/:userId      controllers.Messaging.sendMessage(xauthtoken: String, userId: String)
GET     /t/:xauthtoken/messages/notifications     controllers.Messaging.getNotifications(xauthtoken: String)
DELETE  /t/:xauthtoken/messages/notifications     controllers.Messaging.clearNotifications(xauthtoken: String)
GET     /t/:xauthtoken/messages/unread_count      controllers.Messaging.getUnreadCounts(xauthtoken: String)
DELETE  /t/:xauthtoken/messages/unread_count/:id  controllers.Messaging.clearUnreadCount(xauthtoken: String, id: String)

GET     /t/:xauthtoken/updates                    controllers.Messaging.updates(xauthtoken: String)

GET     /t/:xauthtoken/profile/:userId            controllers.People.profile(xauthtoken: String, userId: String)
POST    /t/:xauthtoken/report/:userId/:causeId    controllers.People.report(xauthtoken: String, userId: String, causeId: Int)
DELETE  /t/:xauthtoken/unmatch/:matchId           controllers.People.unmatch(xauthtoken: String, matchId: String)

GET     /t/:xauthtoken/matchmaker                 controllers.Recommendations.matchmaker(xauthtoken: String)
GET     /t/:xauthtoken/recommendations            controllers.Recommendations.recommendations(xauthtoken: String)
GET     /t/:xauthtoken/like/:userId               controllers.Recommendations.like(xauthtoken: String, userId: String)
GET     /t/:xauthtoken/dislike/:userId            controllers.Recommendations.dislike(xauthtoken: String, userId: String)

# Bot
GET     /t/:xauthtoken/bot                        controllers.Bot.bot(xauthtoken: String)
GET     /bot/state                                controllers.Bot.state
GET     /bot/log/:userId                          controllers.Bot.userLog(userId: String)
GET     /bot/log/:userId/updates                  controllers.Bot.userLogUpdates(userId: String)

